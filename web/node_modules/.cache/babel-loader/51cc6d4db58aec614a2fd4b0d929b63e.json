{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/diegocastro/Documents/projetos/petapp/web/src/pages/Maps.tsx\",\n    _s = $RefreshSig$();\n\nimport '../styles/global.css';\nimport '../styles/pages/maps.css';\nimport logoImg from '../assets/images/boxicon.png';\nimport { Link } from 'react-router-dom';\nimport { FiPlus } from 'react-icons/fi';\nimport GeoLocation from '../controller/geolocator';\n\nconst {\n  detect\n} = require('detect-browser'); // import 'leaflet/dist/leaflet.css';\n\n\nconst browser = detect();\n\nfunction Maps() {\n  _s();\n\n  const [latitude, setLatitude] = useState(39.2008613);\n  const [longitude, setLongitude] = useState(-122.9176757);\n  const options = {\n    enableHighAccuracy: true,\n    timeout: 5000,\n    maximumAge: 0\n  };\n  useEffect(() => {\n    let checkLocationSafari = () => {\n      navigator.geolocation.getCurrentPosition(success, errors, options);\n    };\n\n    let checkLocationChrome = () => {\n      if (navigator.geolocation) {\n        navigator.permissions.query({\n          name: \"geolocation\"\n        }).then(function (result) {\n          if (result.state === \"granted\") {\n            //If granted then you can directly call your function here\n            navigator.geolocation.getCurrentPosition(success);\n          } else if (result.state === \"prompt\") {\n            navigator.geolocation.getCurrentPosition(success, errors, options);\n          } else if (result.state === \"denied\") {//If denied then you have to show instructions to enable location\n          }\n\n          result.onchange = function () {\n            console.log(result.state);\n          };\n        });\n      } else {\n        alert(\"Sorry Not available!\");\n      }\n    };\n\n    let errors = err => {\n      console.warn(`ERROR(${err.code}): ${err.message}`);\n    };\n\n    let success = pos => {\n      let crd = pos.coords;\n      setLatitude(crd.latitude);\n      setLongitude(crd.longitude);\n    };\n\n    if (browser.name === 'safari') {\n      checkLocationSafari();\n    } else {\n      checkLocationChrome();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-map\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"logo\",\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Escolha um local no mapa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Selecione o melhor local para seu companheiro.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Seu pet em boas m\\xE3os!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GeoLocation, {\n      latitude: latitude,\n      longitude: longitude\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/map\",\n      className: \"create-store\",\n      children: /*#__PURE__*/_jsxDEV(FiPlus, {\n        size: 32,\n        color: \"#FFF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Maps, \"d5/aqor2IYvRSC93WvOGesUHGsM=\");\n\n_c = Maps;\nexport default Maps;\n\nvar _c;\n\n$RefreshReg$(_c, \"Maps\");","map":{"version":3,"sources":["/Users/diegocastro/Documents/projetos/petapp/web/src/pages/Maps.tsx"],"names":["logoImg","Link","FiPlus","GeoLocation","detect","require","browser","Maps","latitude","setLatitude","useState","longitude","setLongitude","options","enableHighAccuracy","timeout","maximumAge","useEffect","checkLocationSafari","navigator","geolocation","getCurrentPosition","success","errors","checkLocationChrome","permissions","query","name","then","result","state","onchange","console","log","alert","err","warn","code","message","pos","crd","coords"],"mappings":"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","sourcesContent":["import '../styles/global.css';\nimport '../styles/pages/maps.css';\nimport logoImg from '../assets/images/boxicon.png'\nimport { Link } from 'react-router-dom'\nimport { FiPlus } from 'react-icons/fi'\n\nimport GeoLocation from '../controller/geolocator'\nconst { detect } = require('detect-browser');\n// import 'leaflet/dist/leaflet.css';\n\nconst browser = detect();\n\nfunction Maps() {\n    const [latitude, setLatitude] = useState(39.2008613);\n    const [longitude, setLongitude] = useState(-122.9176757);\n    const options = {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0,\n    };\n\n    useEffect(() => {\n        let checkLocationSafari = () => {\n            navigator.geolocation.getCurrentPosition(success, errors, options);\n        }\n        let checkLocationChrome = () => {\n            if (navigator.geolocation) {\n                navigator.permissions\n                    .query({ name: \"geolocation\" })\n                    .then(function (result) {\n                        if (result.state === \"granted\") {\n                            //If granted then you can directly call your function here\n                            navigator.geolocation.getCurrentPosition(success);\n                        } else if (result.state === \"prompt\") {\n                            navigator.geolocation.getCurrentPosition(success, errors, options);\n                        } else if (result.state === \"denied\") {\n                            //If denied then you have to show instructions to enable location\n                        }\n                        result.onchange = function () {\n                            console.log(result.state);\n                        };\n                    });\n            } else {\n                alert(\"Sorry Not available!\");\n            }\n        }\n        let errors = (err: { code: any; message: any; }) => {\n            console.warn(`ERROR(${err.code}): ${err.message}`);\n        }\n        let success = (pos: { coords: any; }) => {\n            let crd = pos.coords;\n\n            setLatitude(crd.latitude);\n            setLongitude(crd.longitude)\n        }\n\n        if(browser.name === 'safari'){\n            checkLocationSafari()\n        }else{\n            checkLocationChrome()\n        }\n    });\n\n    return (\n        <div id=\"page-map\">\n            <aside>\n                <header>\n                    <img src={logoImg} alt=\"logo\" className=\"logo\" />\n                    <h2>Escolha um local no mapa</h2>\n                    <p>\n                        Selecione o melhor local para seu companheiro.\n                        </p>\n                </header>\n                <footer>\n                    <strong>Seu pet em boas mãos!</strong>\n                </footer>\n            </aside>\n\n            <GeoLocation latitude={latitude} longitude={longitude} />\n\n\n            <Link to=\"/map\" className=\"create-store\">\n                <FiPlus size={32} color=\"#FFF\" />\n            </Link>\n        </div>\n    );\n\n}\n\nexport default Maps;"]},"metadata":{},"sourceType":"module"}